【背景】
在web应用中，用户的每次操作不一定会打开一个全新的页面，因此”后退“和”前进“按钮也就失去了作用，导致用户很难再不同状态下切换

【解决办法】
1.使用hashChange事件:url的参数发生变化时触发
2.使用history.pushState(状态对象,新状态的标题,可选的相对URL)
  
  使用该方法后，新的状态信息会加入到历史状态栈中，而浏览器地址也会变为新的相对URL，
  但是浏览器不会向服务器发生请求，即使状态改变后查询location.href也会返回新的相对URL
  第二参数目前还没有浏览器实现，因此可以传入一个空字符串
  第一个参数应尽可能提供初始化页面状态所需的各种信息
  
  例如:history.pushState({name:"gzf"},"gzf page","gzf.html");

3.按下”后退按钮“会触发window对象的popstate事件（事件触发后，事件对象的状态对象 event.state 是当前状态）
  state中包含着pushState的状态对象
  EventUtil.addHandler(window,"popstate",function(event){
	var state = event.state;
	if(state){//第一个页面加载时 state 为null
		processState(state);//自定义方法
	}
  })

4.history.replaceState(状态对象,新状态的标题);


  注意:在使用HTML5状态管理机制时，确保使用pushState创造的每一个假相对URL，在web服务器上都有与之对应的URL，
       否则，刷新会导致404错误